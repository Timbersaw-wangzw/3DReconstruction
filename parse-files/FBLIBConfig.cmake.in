# =========================================================================
#  FBLIB CMake configuration file
#
#             ** File generated automatically, do not modify **
#
#  Usage from an external project: 
#   In your CMakeLists.txt, add these lines:
#
#    FIND_PACKAGE( FBLIB REQUIRED )  # Default: Use fblib_base & fblib_image
#     or
#    FIND_PACKAGE( FBLIB REQUIRED base image camera ... )
#
#    TARGET_LINK_LIBRARIES(MY_TARGET_NAME ${FBLIB_LIBS})
#
#   
#   The libraries or "modules" which can be included are
#     - base           --> fblib_base
#     - image          --> fblib_image
#     - camera         --> fblib_camera
#     - feature        --> fblib_feature
#
#   This file will define the following variables:
#    - FBLIB_LIBS: The list of libraries to links against.
#    - FBLIB_VERSION: The FBLIB version (e.g. "1.0.0"). 
#    - FBLIB_VERSION_{MAJOR,MINOR,PATCH}: 3 variables for the version parts
#
#   Optional input variables:
#    - FBLIB_DONT_USE_DBG_LIBS: If defined at input, before the 
#         "FIND_PACKAGE(FBLIB...)", and set to "1", the release libraries
#         will be used even for linking against "Debug" CMake builds.
#
# =========================================================================

# FBLIB version numbers:
SET(FBLIB_VERSION @CMAKE_FBLIB_FULL_VERSION@)
SET(FBLIB_VERSION_MAJOR @CMAKE_FBLIB_VERSION_NUMBER_MAJOR@)
SET(FBLIB_VERSION_MINOR @CMAKE_FBLIB_VERSION_NUMBER_MINOR@)
SET(FBLIB_VERSION_PATCH @CMAKE_FBLIB_VERSION_NUMBER_PATCH@)


# Extract the directory where *this* file has been installed (determined at cmake run-time)
get_filename_component(THIS_FBLIB_CONFIG_PATH "${CMAKE_CURRENT_LIST_FILE}" PATH)

# FBLIB source dir
SET(FBLIB_SOURCE_DIR "@THE_FBLIB_SOURCE_DIR@")
SET(FBLIB_LIBS_INCL_DIR "@THE_FBLIB_LIBS_INCL_DIR@")

# FBLIB binary dir
SET(FBLIB_DIR "@THE_CMAKE_BINARY_DIR@")

# FBLIB include directory for "config.h"
SET(FBLIB_CONFIG_DIR "@THE_FBLIB_CONFIG_FILE_INCLUDE_DIR@")

#MESSAGE(STATUS "FBLIB_FIND_COMPONENTS: ${FBLIB_FIND_COMPONENTS}")

# ======================================================
# Include directories where Eigen3 headers are... if 
#  they are not embedded under fblib_base headers:
# ======================================================
IF (NOT @FBLIB_CONFIGFILE_IS_INSTALL@ OR NOT @EIGEN_USE_EMBEDDED_VERSION_BOOL@)
	INCLUDE_DIRECTORIES("@FBLIB_EIGEN_INCLUDE_DIR@")
ENDIF (NOT @FBLIB_CONFIGFILE_IS_INSTALL@ OR NOT @EIGEN_USE_EMBEDDED_VERSION_BOOL@)

# If using GCC and -Wall, eigen3 headers raise some warnings: silent them:
IF(CMAKE_COMPILER_IS_GNUCXX)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-long-long -Wno-variadic-macros")
ENDIF(CMAKE_COMPILER_IS_GNUCXX)


# ======================================================
# Include directories to add to the user project:
# ======================================================
INCLUDE_DIRECTORIES(${FBLIB_CONFIG_DIR})

# OpenCV library:
IF(@CMAKE_FBLIB_HAS_OPENCV_SYSTEM@)    # CMAKE_FBLIB_HAS_OPENCV_SYSTEM
	# Using system opencv lib: 
	# Users must link against OpenCV only if FBLIB is not a dynamic library:
	IF (NOT @CMAKE_FBLIB_BUILD_SHARED_LIB_ONOFF@)  # CMAKE_FBLIB_BUILD_SHARED_LIB
		LINK_DIRECTORIES("@OPENCV_LIBDIR@")  # OPENCV_LIBDIR
	ENDIF (NOT @CMAKE_FBLIB_BUILD_SHARED_LIB_ONOFF@)
ENDIF(@CMAKE_FBLIB_HAS_OPENCV_SYSTEM@)


# ==========================================================
# Default "FBLIB_FIND_COMPONENTS" -> "camera" + "multiview",
#  for backward compatibility (< FBLIB 0.9.0)
# ==========================================================
IF ("${FBLIB_FIND_COMPONENTS}" STREQUAL "")
	SET(FBLIB_FIND_COMPONENTS camera multiview)
ENDIF ("${FBLIB_FIND_COMPONENTS}" STREQUAL "")

# ======================================================
# The list of FBLIB libs/modules in this build
# ======================================================
SET(ALL_FBLIB_LIBS "@ALL_FBLIB_LIBS@")
#  Start of DECLARE_LIBS_DEPS 
@DECLARE_LIBS_DEPS@
#  End of DECLARE_LIBS_DEPS 

#  Start of DECLARE_LIBS_HDR_ONLY
@DECLARE_LIBS_HDR_ONLY@
#  End of DECLARE_LIBS_HDR_ONLY

# Add hierarchical dependencies of FBLIB libraries,
#  and replace "base"->"fblib_base", etc.
# ================================================
SET(FINAL_LIST_COMPONENTS "")
FOREACH(_MOD ${FBLIB_FIND_COMPONENTS})
	STRING(TOLOWER ${_MOD} _MOD)
	SET(_NAM "fblib_${_MOD}")
	get_property(_LIB_DEP GLOBAL PROPERTY "${_NAM}_LIB_DEPS")

	# Add deps:
	IF (NOT "${_LIB_DEP}" STREQUAL "")
		#MESSAGE(STATUS "ADD: ${_LIB_DEP}")
		LIST(APPEND FINAL_LIST_COMPONENTS ${_LIB_DEP})
	ENDIF (NOT "${_LIB_DEP}" STREQUAL "")

	# Add lib itself:
	IF (NOT "${_NAM}" STREQUAL "fblib_core")
		LIST(APPEND FINAL_LIST_COMPONENTS ${_NAM})
	ENDIF (NOT "${_NAM}" STREQUAL "fblib_core")
ENDFOREACH(_MOD)
SET(FBLIB_FIND_COMPONENTS ${FINAL_LIST_COMPONENTS})
list(REMOVE_DUPLICATES FBLIB_FIND_COMPONENTS)

# ======================================================
# Check:
#  All libraries must exist in the FBLIB build. 
#  Compare "FBLIB_FIND_COMPONENTS" against "ALL_FBLIB_LIBS":
# ======================================================
#MESSAGE(STATUS "LIBS: ${ALL_FBLIB_LIBS}")
FOREACH(FBLIBLIB ${FBLIB_FIND_COMPONENTS})
	list(FIND ALL_FBLIB_LIBS "${FBLIBLIB}" _LIB_IDX)
	IF (_LIB_IDX EQUAL -1)
		MESSAGE(FATAL_ERROR "ERROR: FBLIB_FIND_COMPONENTS contains '${FBLIBLIB}', not built in fblib (built ones: ${ALL_FBLIB_LIBS})")
	ENDIF (_LIB_IDX EQUAL -1)
ENDFOREACH(FBLIBLIB)
#MESSAGE(STATUS "FBLIB_FIND_COMPONENTS: ${FBLIB_FIND_COMPONENTS}")


# ======================================================
#   FBLIB list of libraries the user should link against:
# ======================================================
SET(FBLIB_LIBS "@FBLIB_LINKER_LIBS@")

SET(FBLIB_COMP_HWDRIVERS 0  INTERNAL)
# Process the list:
FOREACH(FBLIBLIB ${FBLIB_FIND_COMPONENTS})
	STRING(TOLOWER ${FBLIBLIB} FBLIBLIB)
	STRING(REGEX REPLACE "fblib_(.*)" "\\1" FBLIBLIB ${FBLIBLIB})

	# The include dir:
	INCLUDE_DIRECTORIES("${FBLIB_LIBS_INCL_DIR}/${FBLIBLIB}/include")

	# List of link libs only needed in GCC. In MSVC we use pragma link libs.
	IF(NOT MSVC AND NOT BORLAND)
		# If the required lib is header-only, don't add to the list of libs to link!
		get_property(_LIB_HDRONLY GLOBAL PROPERTY "fblib_${FBLIBLIB}_LIB_IS_HEADERS_ONLY")
		IF(NOT _LIB_HDRONLY)
			IF(NOT FBLIB_DONT_USE_DBG_LIBS)
				LIST(APPEND FBLIB_LIBS  optimized fblib_${FBLIBLIB}@FBLIB_DLL_VERSION_POSTFIX@ debug fblib_${FBLIBLIB}@FBLIB_DLL_VERSION_POSTFIX@d)
			ELSE(NOT FBLIB_DONT_USE_DBG_LIBS)
				LIST(APPEND FBLIB_LIBS  fblib_${FBLIBLIB}@FBLIB_DLL_VERSION_POSTFIX@)
			ENDIF(NOT FBLIB_DONT_USE_DBG_LIBS)
		ENDIF(NOT _LIB_HDRONLY)
	ENDIF(NOT MSVC AND NOT BORLAND)
	
ENDFOREACH(FBLIBLIB)


# ======================================================
# Link directories to add to the user project:
# ======================================================
LINK_DIRECTORIES(${FBLIB_DIR}/lib)

